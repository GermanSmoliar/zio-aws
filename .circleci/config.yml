version: 2.1

# Some reusable YAML definitions
save_cache: &save_cache
  - save_cache:
      key: sbt-cache-{{ checksum "build.sbt" }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-1
      paths:
        - "~/.ivy2/cache"
        - "~/.sbt"
        - "~/.m2"
        - "~/.cache"
        - "~/website/node_modules"

load_cache: &load_cache
  - restore_cache:
      key: sbt-cache-{{ checksum "build.sbt" }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-1

scala_212: &scala_212
  SCALA_VERSION: 2.12.12

scala_213: &scala_213
  SCALA_VERSION: 2.13.3

jdk_8: &jdk_8
  JDK_VERSION: 8

jdk_11: &jdk_11
  JDK_VERSION: 11

filter_tags: &filter_tags
  tags:
    only: /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/

save_test_results: &save_test_results
  - run:
      command: |
        mkdir -p test-reports
        find . -type f -regex ".*/target/test-reports/.*xml" -exec cp {} test-reports/ \;
      name: Save test results

localstack: &localstack
  - image: localstack/localstack
    environment:
      LOCALSTACK_HOST: localstack
      SERVICES: 's3,dynamodb'
      USE_SSL: "false"
      DEFAULT_REGION: 'us-east-1'
      AWS_DEFAULT_REGION: "us-east-1"
      AWS_ACCESS_KEY_ID: dummy-key
      AWS_SECRET_ACCESS_KEY: dummy-key
      DEBUG: "1"

projects:


# CircleCI jobs

jobs:
  tests_core_213:
    docker:
      - image: hseeberger/scala-sbt:8u265_1.3.13_2.13.3
    environment:
      - <<: *scala_213
    steps:
      - checkout
      - <<: *load_cache
      - run: sbt -J-Xmx3g -J-Xms3g zio-aws-core/test zio-aws-akka-http/test zio-aws-http4s/test zio-aws-netty/test
      - <<: *save_cache
      - <<: *save_test_results
      - store_test_results:
          path: test-reports

  integration_tests_213:
    docker:
      - image: hseeberger/scala-sbt:8u265_1.3.13_2.13.3
      - <<: *localstack
    environment:
      - <<: *scala_213
    steps:
      - checkout
      - <<: *load_cache
      - run: sbt -J-Xmx2g examples/compile integtests/test
      - <<: *save_cache
      - <<: *save_test_results
      - store_test_results:
          path: test-reports

  compile_sdk_projects:
    parameters:
      commands:
        description: SBT commands to run
        type: string
      scala_version:
        description: Scala version
        type: string
    docker:
      - image: hseeberger/scala-sbt:8u265_1.3.13_2.13.3
    environment:
      SCALA_VERSION: << parameters.scala_version >>
    steps:
      - checkout
      - <<: *load_cache
      - run: sbt -J-Xmx2g << parameters.commands >>
  #      - <<: *save_cache

  tests_core_212:
    docker:
      - image: hseeberger/scala-sbt:8u265_1.3.13_2.13.3
    environment:
      - <<: *scala_212
    steps:
      - checkout
      - <<: *load_cache
      - run: sbt -J-Xmx3g -J-Xms3g zio-aws-core/test zio-aws-akka-http/test zio-aws-http4s/test zio-aws-netty/test
      - <<: *save_cache
      - <<: *save_test_results
      - store_test_results:
          path: test-reports

  integration_tests_212:
    docker:
      - image: hseeberger/scala-sbt:8u265_1.3.13_2.13.3
      - <<: *localstack
    environment:
      - <<: *scala_212
    steps:
      - checkout
      - <<: *load_cache
      - run: sbt -J-Xmx2g examples/compile integtests/test
      - <<: *save_cache
      - <<: *save_test_results
      - store_test_results:
          path: test-reports

#  test213_jdk11:
#    docker:
#      - image: hseeberger/scala-sbt:11.0.8_1.3.13_2.13.3
#      - image: localstack/localstack
#        environment:
#          LOCALSTACK_HOST: localstack
#          SERVICES: 'kinesis,cloudwatch,dynamodb'
#          USE_SSL: "false"
#          DEFAULT_REGION: 'us-east-1'
#          AWS_DEFAULT_REGION: "us-east-1"
#          AWS_ACCESS_KEY_ID: dummy-key
#          AWS_SECRET_ACCESS_KEY: dummy-key
#          DEBUG: "1"
#    steps:
#      - checkout
#      - restore_cache:
#          key: sbt-cache-{{ checksum "build.sbt" }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}
#      - run: apt update && apt install -y protobuf-compiler
#      - run: sbt ++2.13.3! test
#      - store_test_results:
#          path: target/test-reports
#      - save_cache:
#          key: sbt-cache-{{ checksum "build.sbt" }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}
#          paths:
#            - "~/.ivy2/cache"
#            - "~/.sbt"
#            - "~/.m2"
#  test212_jdk8:
#    docker:
#      - image: hseeberger/scala-sbt:8u265_1.3.13_2.12.12
#      - image: localstack/localstack
#        environment:
#          LOCALSTACK_HOST: localstack
#          SERVICES: 'kinesis,cloudwatch,dynamodb'
#          USE_SSL: "false"
#          DEFAULT_REGION: 'us-east-1'
#          AWS_DEFAULT_REGION: "us-east-1"
#          AWS_ACCESS_KEY_ID: dummy-key
#          AWS_SECRET_ACCESS_KEY: dummy-key
#          DEBUG: "1"
#    steps:
#      - checkout
#      - restore_cache:
#          key: sbt-cache-{{ checksum "build.sbt" }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}
#      - run: apt update && apt install -y protobuf-compiler
#      - run: sbt ++2.12.11! test
#      - save_cache:
#          key: sbt-cache-{{ checksum "build.sbt" }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}
#          paths:
#            - "~/.ivy2/cache"
#            - "~/.sbt"
#            - "~/.m2"
#  test212_jdk11:
#    docker:
#      - image: hseeberger/scala-sbt:11.0.7_1.3.13_2.12.12
#      - image: localstack/localstack
#        environment:
#          LOCALSTACK_HOST: localstack
#          SERVICES: 'kinesis,cloudwatch,dynamodb'
#          USE_SSL: "false"
#          DEFAULT_REGION: 'us-east-1'
#          AWS_DEFAULT_REGION: "us-east-1"
#          AWS_ACCESS_KEY_ID: dummy-key
#          AWS_SECRET_ACCESS_KEY: dummy-key
#          DEBUG: "1"
#    steps:
#      - checkout
#      - restore_cache:
#          key: sbt-cache-{{ checksum "build.sbt" }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}
#      - run: apt update && apt install -y protobuf-compiler
#      - run: sbt ++2.12.11! test
#      - save_cache:
#          key: sbt-cache-{{ checksum "build.sbt" }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}
#          paths:
#            - "~/.ivy2/cache"
#            - "~/.sbt"
#            - "~/.m2"
#  release:
#    docker:
#      - image: hseeberger/scala-sbt:11.0.7_1.3.13_2.12.12
#    steps:
#      - checkout
#      - run:
#          name: Fetch git tags
#          command: git fetch --tags
#            - <<: *load_cache
#            - run:
#                name: Write sonatype credentials
#                command: echo "credentials += Credentials(\"Sonatype Nexus Repository Manager\", \"oss.sonatype.org\", \"${SONATYPE_USER}\", \"${SONATYPE_PASSWORD}\")" > ~/.sbt/1.0/sonatype.sbt
#            - run:
#                name: Write PGP public key
#                command: echo -n "${PGP_PUBLIC}" | base64 -di > /tmp/public.asc
#            - run:
#                name: Write PGP secret key
#                command: echo -n "${PGP_SECRET}" | base64 -di > /tmp/secret.asc
#            - run:
#                name: Release artifacts
#                command: |
#                  mkdir -p $HOME/bin
#                  sudo apt-get update && sudo apt-get -y install gnupg2
#                  echo pinentry-mode loopback >> ~/.gnupg/gpg.conf
#                  echo allow-loopback-pinentry >> ~/.gnupg/gpg-agent.conf
#                  chmod 600 ~/.gnupg/*
#                  ln -s /usr/bin/gpg2 $HOME/bin/gpg
#                  $HOME/bin/gpg --version
#                  echo RELOADAGENT | gpg-connect-agent
#                  echo $PGP_SECRET | base64 -di | gpg2 --import --no-tty --batch --yes
#                  PATH=$HOME/bin:$PATH ./sbt ++${SCALA_VERSION}! +publish

workflows:
  version: 2
  build:
    jobs:
      - tests_core_212:
          filters:
            <<: *filter_tags
      - integration_tests_212:
          requires:
            - tests_core_212
          filters:
            <<: *filter_tags
      - tests_core_213:
          filters:
            <<: *filter_tags
      - compile_sdk_projects:
          requires:
            - tests_core_213
            - tests_core_212
          filters:
            <<: *filter_tags
          matrix:
            parameters:
              scala_version:
                - 2.13.3
                - 2.12.12
              commands:
                - "zio-aws-accessanalyzer/compile zio-aws-acm/compile zio-aws-acmpca/compile zio-aws-alexaforbusiness/compile zio-aws-amplify/compile zio-aws-apigateway/compile zio-aws-apigatewaymanagementapi/compile zio-aws-apigatewayv2/compile zio-aws-appconfig/compile zio-aws-applicationautoscaling/compile zio-aws-applicationdiscovery/compile zio-aws-applicationinsights/compile zio-aws-appmesh/compile zio-aws-appstream/compile zio-aws-appsync/compile zio-aws-athena/compile zio-aws-autoscaling/compile zio-aws-autoscalingplans/compile zio-aws-backup/compile zio-aws-batch/compile zio-aws-braket/compile zio-aws-budgets/compile zio-aws-chime/compile zio-aws-cloud9/compile zio-aws-clouddirectory/compile zio-aws-cloudformation/compile zio-aws-cloudfront/compile zio-aws-cloudhsm/compile zio-aws-cloudhsmv2/compile"
                - "zio-aws-cloudsearch/compile zio-aws-cloudsearchdomain/compile zio-aws-cloudtrail/compile zio-aws-cloudwatch/compile zio-aws-cloudwatchevents/compile zio-aws-cloudwatchlogs/compile zio-aws-codeartifact/compile zio-aws-codebuild/compile zio-aws-codecommit/compile zio-aws-codedeploy/compile zio-aws-codeguruprofiler/compile zio-aws-codegurureviewer/compile zio-aws-codepipeline/compile zio-aws-codestar/compile zio-aws-codestarconnections/compile zio-aws-codestarnotifications/compile zio-aws-cognitoidentity/compile zio-aws-cognitoidentityprovider/compile zio-aws-cognitosync/compile zio-aws-comprehend/compile zio-aws-comprehendmedical/compile zio-aws-computeoptimizer/compile zio-aws-config/compile zio-aws-connect/compile zio-aws-connectparticipant/compile zio-aws-costandusagereport/compile zio-aws-costexplorer/compile zio-aws-databasemigration/compile zio-aws-dataexchange/compile"
                - "zio-aws-datapipeline/compile zio-aws-datasync/compile zio-aws-dax/compile zio-aws-detective/compile zio-aws-devicefarm/compile zio-aws-directconnect/compile zio-aws-directory/compile zio-aws-dlm/compile zio-aws-docdb/compile zio-aws-dynamodb/compile zio-aws-dynamodbstreams/compile zio-aws-ebs/compile zio-aws-ec2/compile zio-aws-ec2instanceconnect/compile zio-aws-ecr/compile zio-aws-ecs/compile zio-aws-efs/compile zio-aws-eks/compile zio-aws-elasticache/compile zio-aws-elasticbeanstalk/compile zio-aws-elasticinference/compile zio-aws-elasticloadbalancing/compile zio-aws-elasticloadbalancingv2/compile zio-aws-elasticsearch/compile zio-aws-elastictranscoder/compile zio-aws-emr/compile zio-aws-eventbridge/compile zio-aws-firehose/compile zio-aws-fms/compile"
                - "zio-aws-forecast/compile zio-aws-forecastquery/compile zio-aws-frauddetector/compile zio-aws-fsx/compile zio-aws-gamelift/compile zio-aws-glacier/compile zio-aws-globalaccelerator/compile zio-aws-glue/compile zio-aws-greengrass/compile zio-aws-groundstation/compile zio-aws-guardduty/compile zio-aws-health/compile zio-aws-honeycode/compile zio-aws-iam/compile zio-aws-identitystore/compile zio-aws-imagebuilder/compile zio-aws-inspector/compile zio-aws-iot/compile zio-aws-iot1clickdevices/compile zio-aws-iot1clickprojects/compile zio-aws-iotanalytics/compile zio-aws-iotdataplane/compile zio-aws-iotevents/compile zio-aws-ioteventsdata/compile zio-aws-iotjobsdataplane/compile zio-aws-iotsecuretunneling/compile zio-aws-iotsitewise/compile zio-aws-iotthingsgraph/compile zio-aws-ivs/compile"
                - "zio-aws-kafka/compile zio-aws-kendra/compile zio-aws-kinesis/compile zio-aws-kinesisanalytics/compile zio-aws-kinesisanalyticsv2/compile zio-aws-kinesisvideo/compile zio-aws-kinesisvideoarchivedmedia/compile zio-aws-kinesisvideomedia/compile zio-aws-kinesisvideosignaling/compile zio-aws-kms/compile zio-aws-lakeformation/compile zio-aws-lambda/compile zio-aws-lexmodelbuilding/compile zio-aws-lexruntime/compile zio-aws-licensemanager/compile zio-aws-lightsail/compile zio-aws-machinelearning/compile zio-aws-macie/compile zio-aws-macie2/compile zio-aws-managedblockchain/compile zio-aws-marketplacecatalog/compile zio-aws-marketplacecommerceanalytics/compile zio-aws-marketplaceentitlement/compile zio-aws-marketplacemetering/compile zio-aws-mediaconnect/compile zio-aws-mediaconvert/compile zio-aws-medialive/compile zio-aws-mediapackage/compile zio-aws-mediapackagevod/compile"
                - "zio-aws-mediastore/compile zio-aws-mediastoredata/compile zio-aws-mediatailor/compile zio-aws-migrationhub/compile zio-aws-migrationhubconfig/compile zio-aws-mobile/compile zio-aws-mq/compile zio-aws-mturk/compile zio-aws-neptune/compile zio-aws-networkmanager/compile zio-aws-opsworks/compile zio-aws-opsworkscm/compile zio-aws-organizations/compile zio-aws-outposts/compile zio-aws-personalize/compile zio-aws-personalizeevents/compile zio-aws-personalizeruntime/compile zio-aws-pi/compile zio-aws-pinpoint/compile zio-aws-pinpointemail/compile zio-aws-pinpointsmsvoice/compile zio-aws-polly/compile zio-aws-pricing/compile zio-aws-qldb/compile zio-aws-qldbsession/compile zio-aws-quicksight/compile zio-aws-ram/compile zio-aws-rds/compile zio-aws-rdsdata/compile"
                - "zio-aws-redshift/compile zio-aws-rekognition/compile zio-aws-resourcegroups/compile zio-aws-resourcegroupstaggingapi/compile zio-aws-robomaker/compile zio-aws-route53/compile zio-aws-route53domains/compile zio-aws-route53resolver/compile zio-aws-s3/compile zio-aws-s3control/compile zio-aws-sagemaker/compile zio-aws-sagemakera2iruntime/compile zio-aws-sagemakerruntime/compile zio-aws-savingsplans/compile zio-aws-schemas/compile zio-aws-secretsmanager/compile zio-aws-securityhub/compile zio-aws-serverlessapplicationrepository/compile zio-aws-servicecatalog/compile zio-aws-servicediscovery/compile zio-aws-servicequotas/compile zio-aws-ses/compile zio-aws-sesv2/compile zio-aws-sfn/compile zio-aws-shield/compile zio-aws-signer/compile zio-aws-sms/compile zio-aws-snowball/compile zio-aws-sns/compile"
                - "zio-aws-sqs/compile zio-aws-ssm/compile zio-aws-sso/compile zio-aws-ssooidc/compile zio-aws-storagegateway/compile zio-aws-sts/compile zio-aws-support/compile zio-aws-swf/compile zio-aws-synthetics/compile zio-aws-textract/compile zio-aws-transcribe/compile zio-aws-transcribestreaming/compile zio-aws-transfer/compile zio-aws-translate/compile zio-aws-waf/compile zio-aws-wafregional/compile zio-aws-wafv2/compile zio-aws-workdocs/compile zio-aws-worklink/compile zio-aws-workmail/compile zio-aws-workmailmessageflow/compile zio-aws-workspaces/compile zio-aws-xray/compile"
#      - release:
#          requires:
#            - compile_sdk_projects
#            - integration_tests_212
#            - integration_tests_213

      - integration_tests_213:
          requires:
            - tests_core_213
          filters:
            <<: *filter_tags
#      - test212_jdk8:
#          requires:
#            - lint
#          filters:
#            <<: *filter_tags
#      - test212_jdk11:
#          requires:
#            - lint
#          filters:
#            <<: *filter_tags
#      - release:
#          requires:
#            - test213_jdk8
#            - test213_jdk11
#            - test212_jdk8
#            - test212_jdk11
#          filters:
#            <<: *filter_tags
#            branches:
#              only:
#                - master