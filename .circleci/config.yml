version: 2.1

# Some reusable YAML definitions
# TODO may need 2.12 cache and 2.13 cache
save_cache: &save_cache
  - save_cache:
      key: sbt-cache-{{ checksum "build.sbt" }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-2
      paths:
        - "~/.ivy2/cache"
        - "~/.sbt"
        - "~/.m2"
        - "~/.cache"
        - "target"

load_cache: &load_cache
  - restore_cache:
      key: sbt-cache-{{ checksum "build.sbt" }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-2

scala_212: &scala_212
  SCALA_VERSION: 2.12.12

scala_213: &scala_213
  SCALA_VERSION: 2.13.3

jdk_8: &jdk_8
  JDK_VERSION: 8

jdk_11: &jdk_11
  JDK_VERSION: 11

filter_tags: &filter_tags
  tags:
    only: /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/

java_opts: &java_opts
  JAVA_OPTS: -Xmx2g -Xms1g -Dfile.encoding=UTF8 -Xss16M -XX:+UseParallelGC -XX:ReservedCodeCacheSize=512M

save_test_results: &save_test_results
  - run:
      command: |
        mkdir -p test-reports
        find . -type f -regex ".*/target/test-reports/.*xml" -exec cp {} test-reports/ \;
      name: Save test results

localstack: &localstack
  - image: localstack/localstack
    environment:
      LOCALSTACK_HOST: localstack
      SERVICES: 's3,dynamodb'
      USE_SSL: "false"
      DEFAULT_REGION: 'us-east-1'
      AWS_DEFAULT_REGION: "us-east-1"
      AWS_ACCESS_KEY_ID: dummy-key
      AWS_SECRET_ACCESS_KEY: dummy-key
      DEBUG: "1"

# CircleCI jobs

jobs:
  tests_core_213:
    docker:
      - image: hseeberger/scala-sbt:11.0.8_1.4.1_2.13.3
    environment:
      - <<: *java_opts
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - <<: *load_cache
      - run: sbt -J-Xmx3g -J-Xms3g ++$SCALA_VERSION zio-aws-core/test zio-aws-akka-http/test zio-aws-http4s/test zio-aws-netty/test
      - <<: *save_cache
      - <<: *save_test_results
      - store_test_results:
          path: test-reports
      - persist_to_workspace:
          root: .
          paths:
            - project/target/scala-2.13
            - target/scala-2.13
            - zio-aws-*/target/scala-2.13
            - generated

  tests_core_212:
    docker:
      - image: hseeberger/scala-sbt:11.0.8_1.4.1_2.12.12
    environment:
      - <<: *scala_212
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - <<: *load_cache
      - run: sbt -J-Xmx3g -J-Xms3g ++$SCALA_VERSION zio-aws-core/test zio-aws-akka-http/test zio-aws-http4s/test zio-aws-netty/test
      - <<: *save_cache
      - <<: *save_test_results
      - store_test_results:
          path: test-reports
      - persist_to_workspace:
          root: .
          paths:
            - project/target/scala-2.12
            - target/scala-2.12
            - zio-aws-*/target/scala-2.12
            - generated

  integration_tests_213:
    docker:
      - image: hseeberger/scala-sbt:11.0.8_1.4.1_2.13.3
      - <<: *localstack
    environment:
      - <<: *scala_213
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - <<: *load_cache
      - run: sbt -J-Xmx2500m -J-Xms2500m ++$SCALA_VERSION examples/compile integtests/test
      - <<: *save_cache
      - <<: *save_test_results
      - store_test_results:
          path: test-reports

  integration_tests_212:
    docker:
      - image: hseeberger/scala-sbt:11.0.8_1.4.1_2.12.12
      - <<: *localstack
    environment:
      - <<: *scala_212
    steps:
      - checkout
      - <<: *load_cache
      - run: sbt -J-Xmx2500m -J-Xms2500m ++$SCALA_VERSION examples/compile integtests/test
      - <<: *save_cache
      - <<: *save_test_results
      - store_test_results:
          path: test-reports

  tag:
    docker:
      - image: hseeberger/scala-sbt:11.0.8_1.4.1_2.12.12
    environment:
      CIRCLE_REPOSITORY_URL: https://github.com/svroonland/zio-aws.git
    steps:
      - add_ssh_keys:
          fingerprints:
            - $SSH_FINGERPRINT
      - checkout
      - <<: *load_cache
      - run: sbt -J-Xmx2500m -J-Xms2500m  ciReleaseTagNextVersion

  compile_sdk_projects:
    parameters:
      commands:
        description: SBT commands to run
        type: string
      scala_version:
        description: Scala version
        type: string
    docker:
      - image: hseeberger/scala-sbt:11.0.8_1.4.1_2.13.3
    environment:
      - SCALA_VERSION: << parameters.scala_version >>
      - <<: *java_opts
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - <<: *load_cache
      - run: sbt ++$SCALA_VERSION << parameters.commands >>
      - persist_to_workspace:
          root: .
          paths:
            - target/sonatype-staging

  publish_local:
    parameters:
      scala_version:
        description: Scala version
        type: string
    docker:
      - image: hseeberger/scala-sbt:11.0.8_1.4.1_2.13.3
    environment:
      - SCALA_VERSION: << parameters.scala_version >>
      - <<: *java_opts
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - <<: *load_cache
      - run: sbt ++$SCALA_VERSION -J-Xmx2500m -J-Xms2500m publishLocal

  release:
    docker:
      - image: hseeberger/scala-sbt:11.0.8_1.4.1_2.13.3
    steps:
      - checkout
      - run:
          name: Fetch git tags
          command: git fetch --tags
      - attach_workspace:
          at: ~/project
      - <<: *load_cache
      - run:
          name: Write sonatype credentials
          command: echo "credentials += Credentials(\"Sonatype Nexus Repository Manager\", \"oss.sonatype.org\", \"${SONATYPE_USER}\", \"${SONATYPE_PASSWORD}\")" > ~/.sbt/1.0/sonatype.sbt
      - run:
          name: Write PGP public key
          command: echo -n "${PGP_PUBLIC}" | base64 -di > /tmp/public.asc
      - run:
          name: Write PGP secret key
          command: echo -n "${PGP_SECRET}" | base64 -di > /tmp/secret.asc
      - run:
          name: Release artifacts
          command: |
            mkdir -p $HOME/bin
            apt-get update && sudo apt-get -y install gnupg2
            echo pinentry-mode loopback >> ~/.gnupg/gpg.conf
            echo allow-loopback-pinentry >> ~/.gnupg/gpg-agent.conf
            chmod 600 ~/.gnupg/*
            ln -s /usr/bin/gpg2 $HOME/bin/gpg
            $HOME/bin/gpg --version
            echo RELOADAGENT | gpg-connect-agent
            echo $PGP_SECRET | base64 -di | gpg2 --import --no-tty --batch --yes
            PATH=$HOME/bin:$PATH ./sbt publish sonatypeBundleRelease

workflows:
  version: 2
  build:
    jobs:
      # Scala 2.12
      - tests_core_212:
          filters:
            <<: *filter_tags
      - integration_tests_212:
          requires:
            - tests_core_212
          filters:
            <<: *filter_tags
      # Scala 2.13
      - tests_core_213:
          filters:
            <<: *filter_tags
      - integration_tests_213:
          requires:
            - tests_core_213
          filters:
            <<: *filter_tags

      # Create the next tag
      - tag:
          filters:
            <<: *filter_tags

      # Cross build SDK projects
      - compile_sdk_projects:
          requires:
            - tests_core_213
            - tests_core_212
            - tag
          filters:
            <<: *filter_tags
          matrix:
            parameters:
              scala_version:
                - 2.13.3
                - 2.12.12
                # NOTE this part is automatically generated
              commands: [ "zio-aws-accessanalyzer/publishSigned" ]
      - publish_local:
          requires:
            - compile_sdk_projects
          matrix:
            parameters:
              scala_version:
                - 2.13.3
                - 2.12.12
      - release

