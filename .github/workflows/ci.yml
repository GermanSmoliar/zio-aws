name: CI

on:
  pull_request:
    branches-ignore: 
      - gh-pages

  push:
    branches-ignore: 
      - gh-pages

jobs:
  build-core:
    name: Build and test core
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.3]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: | 
            ~/.ivy2/cache
            ~/.sbt            
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
          key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
      
      - name: Build and test core        
        run: ./sbt -J-Xmx6g -J-Xms6g ++${{ matrix.scala }} zio-aws-core/test zio-aws-akka-http/test zio-aws-http4s/test zio-aws-netty/test

      - name: Compress core target directories        
        run: tar cf targets.tar target project/target zio-aws-codegen/target zio-aws-core/target zio-aws-akka-http/target zio-aws-http4s/target zio-aws-netty/target

      - name: Upload target directories
        uses: actions/upload-artifact@v2
        with:
          name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

  build-clients-1:
    name: 'Build client libraries #1'
    needs: build-core
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.3]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: | 
            ~/.ivy2/cache
            ~/.sbt            
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
          key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
      - name: Download core target directories
        uses: actions/download-artifact@v2
        with:
          name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
      - name: Inflate core target directories
        run: |
          tar xf targets.tar
          rm targets.tar      

      - name: Build libraries
        run: ./sbt -J-Xmx6g -J-Xms6g ++${{ matrix.scala }} zio-aws-accessanalyzer/compile zio-aws-acm/compile zio-aws-acmpca/compile zio-aws-alexaforbusiness/compile zio-aws-amplify/compile zio-aws-apigateway/compile zio-aws-apigatewaymanagementapi/compile zio-aws-apigatewayv2/compile zio-aws-appconfig/compile zio-aws-appflow/compile zio-aws-applicationautoscaling/compile zio-aws-applicationdiscovery/compile zio-aws-applicationinsights/compile zio-aws-appmesh/compile zio-aws-appstream/compile zio-aws-appsync/compile zio-aws-athena/compile zio-aws-autoscaling/compile zio-aws-autoscalingplans/compile zio-aws-backup/compile

      - name: Compress target directories        
        run: tar cf targets.tar generated/accessanalyzer/target generated/acm/target generated/acmpca/target generated/alexaforbusiness/target generated/amplify/target generated/apigateway/target generated/apigatewaymanagementapi/target zio-aws-apigatewayv2/compile generated/appconfig/target generated/appflow/target generated/applicationautoscaling/target generated/applicationdiscovery/target generated/applicationinsights/target generated/appmesh/target generated/appstream/target generated/appsync/target generated/athena/target generated/autoscaling/target generated/autoscalingplans/target generated/backup/target

      - name: Upload target directories
        uses: actions/upload-artifact@v2
        with:
          name: target-1-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar


  integration-test:
    name: Integration test
    needs: build-core
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.3]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    services:
      localstack:
        image: localstack/localstack:latest
        env:
          LOCALSTACK_HOST: localstack
          SERVICES: 's3,dynamodb'
          USE_SSL: "false"
          DEFAULT_REGION: 'us-east-1'
          AWS_DEFAULT_REGION: "us-east-1"
          AWS_ACCESS_KEY_ID: dummy-key
          AWS_SECRET_ACCESS_KEY: dummy-key
          DEBUG: "0"
        ports:
          - 4566:4566          
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: | 
            ~/.ivy2/cache
            ~/.sbt            
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
          key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
      - name: Download core target directories
        uses: actions/download-artifact@v2
        with:
          name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
      - name: Inflate core target directories
        run: |
          tar xf targets.tar
          rm targets.tar      

      - name: Build and run tests
        run: ./sbt -J-Xmx5g -J-Xms5g ++${{ matrix.scala }} examples/compile integtests/test
