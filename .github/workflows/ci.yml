name: CI
'on':
  pull_request:
    branches-ignore:
    - gh-pages
  push:
    branches-ignore:
    - gh-pages
jobs:
  tag:
    name: Tag build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: adopt@1.8
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ubuntu-latest-sbt-2.13.6-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties')
          }}
    - name: Setup GIT user
      uses: fregante/setup-git-user@v1
    - name: Turnstyle
      uses: softprops/turnstyle@v1
      if: ${{ github.ref == 'refs/heads/master' }}
      env:
        GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
    - name: Tag release
      if: ${{ github.ref == 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m tagAwsVersion ciReleaseTagNextVersion
  build-core:
    name: Build and test core
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - tag
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Load PGP secret
      if: ${{ github.ref == 'refs/heads/master' }}
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Build and test core
      if: ${{ matrix.scala != '3.1.0' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-core/test
        zio-aws-akka-http/test zio-aws-http4s/test zio-aws-netty/test
    - name: Build and test core
      if: ${{ matrix.scala == '3.1.0' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-core/test
        zio-aws-netty/test
    - name: Publish core
      if: ${{ (github.ref == 'refs/heads/master') && (matrix.scala != '3.1.0') }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-core/publishSigned
        zio-aws-akka-http/publishSigned zio-aws-http4s/publishSigned zio-aws-netty/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Publish core snapshot
      if: ${{ (github.ref == 'refs/heads/zio2') && (matrix.scala != '3.1.0') }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-core/publish
        zio-aws-akka-http/publish zio-aws-http4s/publish zio-aws-netty/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Publish core
      if: ${{ (github.ref == 'refs/heads/master') && (matrix.scala == '3.1.0') }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-core/publishSigned
        zio-aws-netty/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Publish core snapshot
      if: ${{ (github.ref == 'refs/heads/zio2') && (matrix.scala == '3.1.0') }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-core/publish
        zio-aws-netty/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Compress core targets
      if: ${{ matrix.scala != '3.1.0' }}
      run: tar cvf targets.tar target project/target zio-aws-codegen/target zio-aws-core/target
        zio-aws-akka-http/target zio-aws-http4s/target zio-aws-netty/target
    - name: Upload core targets
      uses: actions/upload-artifact@v2
      if: ${{ matrix.scala != '3.1.0' }}
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
        path: targets.tar
    - name: Compress core targets
      if: ${{ matrix.scala == '3.1.0' }}
      run: tar cvf targets.tar target project/target zio-aws-codegen/target zio-aws-core/target
        zio-aws-netty/target
    - name: Upload core targets
      uses: actions/upload-artifact@v2
      if: ${{ matrix.scala == '3.1.0' }}
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
        path: targets.tar
  build-clients-0:
    name: 'Build client libraries #0'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - build-core
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Load PGP secret
      if: ${{ github.ref == 'refs/heads/master' }}
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Build libraries
      if: ${{ github.ref != 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-accessanalyzer/compile
        zio-aws-account/compile zio-aws-acm/compile zio-aws-acmpca/compile zio-aws-alexaforbusiness/compile
        zio-aws-amp/compile zio-aws-amplify/compile zio-aws-amplifybackend/compile
        zio-aws-apigateway/compile zio-aws-apigatewaymanagementapi/compile zio-aws-apigatewayv2/compile
        zio-aws-appconfig/compile zio-aws-appflow/compile zio-aws-appintegrations/compile
        zio-aws-applicationautoscaling/compile zio-aws-applicationcostprofiler/compile
        zio-aws-applicationdiscovery/compile zio-aws-applicationinsights/compile zio-aws-appmesh/compile
        zio-aws-apprunner/compile zio-aws-appstream/compile zio-aws-appsync/compile
        zio-aws-athena/compile zio-aws-auditmanager/compile zio-aws-autoscaling/compile
        zio-aws-autoscalingplans/compile zio-aws-backup/compile zio-aws-batch/compile
        zio-aws-braket/compile
    - name: Build and publish libraries
      if: ${{ github.ref == 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-accessanalyzer/publishSigned
        zio-aws-account/publishSigned zio-aws-acm/publishSigned zio-aws-acmpca/publishSigned
        zio-aws-alexaforbusiness/publishSigned zio-aws-amp/publishSigned zio-aws-amplify/publishSigned
        zio-aws-amplifybackend/publishSigned zio-aws-apigateway/publishSigned zio-aws-apigatewaymanagementapi/publishSigned
        zio-aws-apigatewayv2/publishSigned zio-aws-appconfig/publishSigned zio-aws-appflow/publishSigned
        zio-aws-appintegrations/publishSigned zio-aws-applicationautoscaling/publishSigned
        zio-aws-applicationcostprofiler/publishSigned zio-aws-applicationdiscovery/publishSigned
        zio-aws-applicationinsights/publishSigned zio-aws-appmesh/publishSigned zio-aws-apprunner/publishSigned
        zio-aws-appstream/publishSigned zio-aws-appsync/publishSigned zio-aws-athena/publishSigned
        zio-aws-auditmanager/publishSigned zio-aws-autoscaling/publishSigned zio-aws-autoscalingplans/publishSigned
        zio-aws-backup/publishSigned zio-aws-batch/publishSigned zio-aws-braket/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Build and publish library snapshots
      if: ${{ github.ref == 'refs/heads/zio2' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-accessanalyzer/publish
        zio-aws-account/publish zio-aws-acm/publish zio-aws-acmpca/publish zio-aws-alexaforbusiness/publish
        zio-aws-amp/publish zio-aws-amplify/publish zio-aws-amplifybackend/publish
        zio-aws-apigateway/publish zio-aws-apigatewaymanagementapi/publish zio-aws-apigatewayv2/publish
        zio-aws-appconfig/publish zio-aws-appflow/publish zio-aws-appintegrations/publish
        zio-aws-applicationautoscaling/publish zio-aws-applicationcostprofiler/publish
        zio-aws-applicationdiscovery/publish zio-aws-applicationinsights/publish zio-aws-appmesh/publish
        zio-aws-apprunner/publish zio-aws-appstream/publish zio-aws-appsync/publish
        zio-aws-athena/publish zio-aws-auditmanager/publish zio-aws-autoscaling/publish
        zio-aws-autoscalingplans/publish zio-aws-backup/publish zio-aws-batch/publish
        zio-aws-braket/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Compress clients-0 targets
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      run: tar cvf targets.tar target
    - name: Upload clients-0 targets
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      with:
        name: target-clients-0-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java
          }}
        path: targets.tar
  build-clients-1:
    name: 'Build client libraries #1'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - build-core
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Load PGP secret
      if: ${{ github.ref == 'refs/heads/master' }}
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Build libraries
      if: ${{ github.ref != 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-budgets/compile
        zio-aws-chime/compile zio-aws-chimesdkidentity/compile zio-aws-chimesdkmessaging/compile
        zio-aws-cloud9/compile zio-aws-cloudcontrol/compile zio-aws-clouddirectory/compile
        zio-aws-cloudformation/compile zio-aws-cloudfront/compile zio-aws-cloudhsm/compile
        zio-aws-cloudhsmv2/compile zio-aws-cloudsearch/compile zio-aws-cloudsearchdomain/compile
        zio-aws-cloudtrail/compile zio-aws-cloudwatch/compile zio-aws-cloudwatchevents/compile
        zio-aws-cloudwatchlogs/compile zio-aws-codeartifact/compile zio-aws-codebuild/compile
        zio-aws-codecommit/compile zio-aws-codedeploy/compile zio-aws-codeguruprofiler/compile
        zio-aws-codegurureviewer/compile zio-aws-codepipeline/compile zio-aws-codestar/compile
        zio-aws-codestarconnections/compile zio-aws-codestarnotifications/compile
        zio-aws-cognitoidentity/compile zio-aws-cognitoidentityprovider/compile
    - name: Build and publish libraries
      if: ${{ github.ref == 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-budgets/publishSigned
        zio-aws-chime/publishSigned zio-aws-chimesdkidentity/publishSigned zio-aws-chimesdkmessaging/publishSigned
        zio-aws-cloud9/publishSigned zio-aws-cloudcontrol/publishSigned zio-aws-clouddirectory/publishSigned
        zio-aws-cloudformation/publishSigned zio-aws-cloudfront/publishSigned zio-aws-cloudhsm/publishSigned
        zio-aws-cloudhsmv2/publishSigned zio-aws-cloudsearch/publishSigned zio-aws-cloudsearchdomain/publishSigned
        zio-aws-cloudtrail/publishSigned zio-aws-cloudwatch/publishSigned zio-aws-cloudwatchevents/publishSigned
        zio-aws-cloudwatchlogs/publishSigned zio-aws-codeartifact/publishSigned zio-aws-codebuild/publishSigned
        zio-aws-codecommit/publishSigned zio-aws-codedeploy/publishSigned zio-aws-codeguruprofiler/publishSigned
        zio-aws-codegurureviewer/publishSigned zio-aws-codepipeline/publishSigned
        zio-aws-codestar/publishSigned zio-aws-codestarconnections/publishSigned zio-aws-codestarnotifications/publishSigned
        zio-aws-cognitoidentity/publishSigned zio-aws-cognitoidentityprovider/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Build and publish library snapshots
      if: ${{ github.ref == 'refs/heads/zio2' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-budgets/publish
        zio-aws-chime/publish zio-aws-chimesdkidentity/publish zio-aws-chimesdkmessaging/publish
        zio-aws-cloud9/publish zio-aws-cloudcontrol/publish zio-aws-clouddirectory/publish
        zio-aws-cloudformation/publish zio-aws-cloudfront/publish zio-aws-cloudhsm/publish
        zio-aws-cloudhsmv2/publish zio-aws-cloudsearch/publish zio-aws-cloudsearchdomain/publish
        zio-aws-cloudtrail/publish zio-aws-cloudwatch/publish zio-aws-cloudwatchevents/publish
        zio-aws-cloudwatchlogs/publish zio-aws-codeartifact/publish zio-aws-codebuild/publish
        zio-aws-codecommit/publish zio-aws-codedeploy/publish zio-aws-codeguruprofiler/publish
        zio-aws-codegurureviewer/publish zio-aws-codepipeline/publish zio-aws-codestar/publish
        zio-aws-codestarconnections/publish zio-aws-codestarnotifications/publish
        zio-aws-cognitoidentity/publish zio-aws-cognitoidentityprovider/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Compress clients-1 targets
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      run: tar cvf targets.tar target
    - name: Upload clients-1 targets
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      with:
        name: target-clients-1-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java
          }}
        path: targets.tar
  build-clients-2:
    name: 'Build client libraries #2'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - build-core
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Load PGP secret
      if: ${{ github.ref == 'refs/heads/master' }}
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Build libraries
      if: ${{ github.ref != 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-cognitosync/compile
        zio-aws-comprehend/compile zio-aws-comprehendmedical/compile zio-aws-computeoptimizer/compile
        zio-aws-config/compile zio-aws-connect/compile zio-aws-connectcontactlens/compile
        zio-aws-connectparticipant/compile zio-aws-costandusagereport/compile zio-aws-costexplorer/compile
        zio-aws-customerprofiles/compile zio-aws-databasemigration/compile zio-aws-databrew/compile
        zio-aws-dataexchange/compile zio-aws-datapipeline/compile zio-aws-datasync/compile
        zio-aws-dax/compile zio-aws-detective/compile zio-aws-devicefarm/compile zio-aws-devopsguru/compile
        zio-aws-directconnect/compile zio-aws-directory/compile zio-aws-dlm/compile
        zio-aws-docdb/compile zio-aws-dynamodb/compile zio-aws-dynamodbstreams/compile
        zio-aws-ebs/compile zio-aws-ec2instanceconnect/compile zio-aws-ecr/compile
    - name: Build and publish libraries
      if: ${{ github.ref == 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-cognitosync/publishSigned
        zio-aws-comprehend/publishSigned zio-aws-comprehendmedical/publishSigned zio-aws-computeoptimizer/publishSigned
        zio-aws-config/publishSigned zio-aws-connect/publishSigned zio-aws-connectcontactlens/publishSigned
        zio-aws-connectparticipant/publishSigned zio-aws-costandusagereport/publishSigned
        zio-aws-costexplorer/publishSigned zio-aws-customerprofiles/publishSigned
        zio-aws-databasemigration/publishSigned zio-aws-databrew/publishSigned zio-aws-dataexchange/publishSigned
        zio-aws-datapipeline/publishSigned zio-aws-datasync/publishSigned zio-aws-dax/publishSigned
        zio-aws-detective/publishSigned zio-aws-devicefarm/publishSigned zio-aws-devopsguru/publishSigned
        zio-aws-directconnect/publishSigned zio-aws-directory/publishSigned zio-aws-dlm/publishSigned
        zio-aws-docdb/publishSigned zio-aws-dynamodb/publishSigned zio-aws-dynamodbstreams/publishSigned
        zio-aws-ebs/publishSigned zio-aws-ec2instanceconnect/publishSigned zio-aws-ecr/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Build and publish library snapshots
      if: ${{ github.ref == 'refs/heads/zio2' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-cognitosync/publish
        zio-aws-comprehend/publish zio-aws-comprehendmedical/publish zio-aws-computeoptimizer/publish
        zio-aws-config/publish zio-aws-connect/publish zio-aws-connectcontactlens/publish
        zio-aws-connectparticipant/publish zio-aws-costandusagereport/publish zio-aws-costexplorer/publish
        zio-aws-customerprofiles/publish zio-aws-databasemigration/publish zio-aws-databrew/publish
        zio-aws-dataexchange/publish zio-aws-datapipeline/publish zio-aws-datasync/publish
        zio-aws-dax/publish zio-aws-detective/publish zio-aws-devicefarm/publish zio-aws-devopsguru/publish
        zio-aws-directconnect/publish zio-aws-directory/publish zio-aws-dlm/publish
        zio-aws-docdb/publish zio-aws-dynamodb/publish zio-aws-dynamodbstreams/publish
        zio-aws-ebs/publish zio-aws-ec2instanceconnect/publish zio-aws-ecr/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Compress clients-2 targets
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      run: tar cvf targets.tar target
    - name: Upload clients-2 targets
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      with:
        name: target-clients-2-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java
          }}
        path: targets.tar
  build-clients-3:
    name: 'Build client libraries #3'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - build-core
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Load PGP secret
      if: ${{ github.ref == 'refs/heads/master' }}
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Build libraries
      if: ${{ github.ref != 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-ecrpublic/compile
        zio-aws-ecs/compile zio-aws-efs/compile zio-aws-eks/compile zio-aws-elasticache/compile
        zio-aws-elasticbeanstalk/compile zio-aws-elasticinference/compile zio-aws-elasticloadbalancing/compile
        zio-aws-elasticloadbalancingv2/compile zio-aws-elasticsearch/compile zio-aws-elastictranscoder/compile
        zio-aws-emr/compile zio-aws-emrcontainers/compile zio-aws-eventbridge/compile
        zio-aws-finspace/compile zio-aws-finspacedata/compile zio-aws-firehose/compile
        zio-aws-fis/compile zio-aws-fms/compile zio-aws-forecast/compile zio-aws-forecastquery/compile
        zio-aws-frauddetector/compile zio-aws-fsx/compile zio-aws-gamelift/compile
        zio-aws-glacier/compile zio-aws-globalaccelerator/compile zio-aws-glue/compile
        zio-aws-grafana/compile zio-aws-greengrass/compile
    - name: Build and publish libraries
      if: ${{ github.ref == 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-ecrpublic/publishSigned
        zio-aws-ecs/publishSigned zio-aws-efs/publishSigned zio-aws-eks/publishSigned
        zio-aws-elasticache/publishSigned zio-aws-elasticbeanstalk/publishSigned zio-aws-elasticinference/publishSigned
        zio-aws-elasticloadbalancing/publishSigned zio-aws-elasticloadbalancingv2/publishSigned
        zio-aws-elasticsearch/publishSigned zio-aws-elastictranscoder/publishSigned
        zio-aws-emr/publishSigned zio-aws-emrcontainers/publishSigned zio-aws-eventbridge/publishSigned
        zio-aws-finspace/publishSigned zio-aws-finspacedata/publishSigned zio-aws-firehose/publishSigned
        zio-aws-fis/publishSigned zio-aws-fms/publishSigned zio-aws-forecast/publishSigned
        zio-aws-forecastquery/publishSigned zio-aws-frauddetector/publishSigned zio-aws-fsx/publishSigned
        zio-aws-gamelift/publishSigned zio-aws-glacier/publishSigned zio-aws-globalaccelerator/publishSigned
        zio-aws-glue/publishSigned zio-aws-grafana/publishSigned zio-aws-greengrass/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Build and publish library snapshots
      if: ${{ github.ref == 'refs/heads/zio2' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-ecrpublic/publish
        zio-aws-ecs/publish zio-aws-efs/publish zio-aws-eks/publish zio-aws-elasticache/publish
        zio-aws-elasticbeanstalk/publish zio-aws-elasticinference/publish zio-aws-elasticloadbalancing/publish
        zio-aws-elasticloadbalancingv2/publish zio-aws-elasticsearch/publish zio-aws-elastictranscoder/publish
        zio-aws-emr/publish zio-aws-emrcontainers/publish zio-aws-eventbridge/publish
        zio-aws-finspace/publish zio-aws-finspacedata/publish zio-aws-firehose/publish
        zio-aws-fis/publish zio-aws-fms/publish zio-aws-forecast/publish zio-aws-forecastquery/publish
        zio-aws-frauddetector/publish zio-aws-fsx/publish zio-aws-gamelift/publish
        zio-aws-glacier/publish zio-aws-globalaccelerator/publish zio-aws-glue/publish
        zio-aws-grafana/publish zio-aws-greengrass/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Compress clients-3 targets
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      run: tar cvf targets.tar target
    - name: Upload clients-3 targets
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      with:
        name: target-clients-3-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java
          }}
        path: targets.tar
  build-clients-4:
    name: 'Build client libraries #4'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - build-core
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Load PGP secret
      if: ${{ github.ref == 'refs/heads/master' }}
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Build libraries
      if: ${{ github.ref != 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-greengrassv2/compile
        zio-aws-groundstation/compile zio-aws-guardduty/compile zio-aws-health/compile
        zio-aws-healthlake/compile zio-aws-honeycode/compile zio-aws-iam/compile zio-aws-identitystore/compile
        zio-aws-imagebuilder/compile zio-aws-inspector/compile zio-aws-iot/compile
        zio-aws-iot1clickdevices/compile zio-aws-iot1clickprojects/compile zio-aws-iotanalytics/compile
        zio-aws-iotdataplane/compile zio-aws-iotdeviceadvisor/compile zio-aws-iotevents/compile
        zio-aws-ioteventsdata/compile zio-aws-iotfleethub/compile zio-aws-iotjobsdataplane/compile
        zio-aws-iotsecuretunneling/compile zio-aws-iotsitewise/compile zio-aws-iotthingsgraph/compile
        zio-aws-iotwireless/compile zio-aws-ivs/compile zio-aws-kafka/compile zio-aws-kafkaconnect/compile
        zio-aws-kendra/compile zio-aws-kinesis/compile
    - name: Build and publish libraries
      if: ${{ github.ref == 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-greengrassv2/publishSigned
        zio-aws-groundstation/publishSigned zio-aws-guardduty/publishSigned zio-aws-health/publishSigned
        zio-aws-healthlake/publishSigned zio-aws-honeycode/publishSigned zio-aws-iam/publishSigned
        zio-aws-identitystore/publishSigned zio-aws-imagebuilder/publishSigned zio-aws-inspector/publishSigned
        zio-aws-iot/publishSigned zio-aws-iot1clickdevices/publishSigned zio-aws-iot1clickprojects/publishSigned
        zio-aws-iotanalytics/publishSigned zio-aws-iotdataplane/publishSigned zio-aws-iotdeviceadvisor/publishSigned
        zio-aws-iotevents/publishSigned zio-aws-ioteventsdata/publishSigned zio-aws-iotfleethub/publishSigned
        zio-aws-iotjobsdataplane/publishSigned zio-aws-iotsecuretunneling/publishSigned
        zio-aws-iotsitewise/publishSigned zio-aws-iotthingsgraph/publishSigned zio-aws-iotwireless/publishSigned
        zio-aws-ivs/publishSigned zio-aws-kafka/publishSigned zio-aws-kafkaconnect/publishSigned
        zio-aws-kendra/publishSigned zio-aws-kinesis/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Build and publish library snapshots
      if: ${{ github.ref == 'refs/heads/zio2' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-greengrassv2/publish
        zio-aws-groundstation/publish zio-aws-guardduty/publish zio-aws-health/publish
        zio-aws-healthlake/publish zio-aws-honeycode/publish zio-aws-iam/publish zio-aws-identitystore/publish
        zio-aws-imagebuilder/publish zio-aws-inspector/publish zio-aws-iot/publish
        zio-aws-iot1clickdevices/publish zio-aws-iot1clickprojects/publish zio-aws-iotanalytics/publish
        zio-aws-iotdataplane/publish zio-aws-iotdeviceadvisor/publish zio-aws-iotevents/publish
        zio-aws-ioteventsdata/publish zio-aws-iotfleethub/publish zio-aws-iotjobsdataplane/publish
        zio-aws-iotsecuretunneling/publish zio-aws-iotsitewise/publish zio-aws-iotthingsgraph/publish
        zio-aws-iotwireless/publish zio-aws-ivs/publish zio-aws-kafka/publish zio-aws-kafkaconnect/publish
        zio-aws-kendra/publish zio-aws-kinesis/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Compress clients-4 targets
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      run: tar cvf targets.tar target
    - name: Upload clients-4 targets
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      with:
        name: target-clients-4-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java
          }}
        path: targets.tar
  build-clients-5:
    name: 'Build client libraries #5'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - build-core
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Load PGP secret
      if: ${{ github.ref == 'refs/heads/master' }}
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Build libraries
      if: ${{ github.ref != 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-kinesisanalytics/compile
        zio-aws-kinesisanalyticsv2/compile zio-aws-kinesisvideo/compile zio-aws-kinesisvideoarchivedmedia/compile
        zio-aws-kinesisvideomedia/compile zio-aws-kinesisvideosignaling/compile zio-aws-kms/compile
        zio-aws-lakeformation/compile zio-aws-lambda/compile zio-aws-lexmodelbuilding/compile
        zio-aws-lexmodelsv2/compile zio-aws-lexruntime/compile zio-aws-lexruntimev2/compile
        zio-aws-licensemanager/compile zio-aws-lightsail/compile zio-aws-location/compile
        zio-aws-lookoutequipment/compile zio-aws-lookoutmetrics/compile zio-aws-lookoutvision/compile
        zio-aws-machinelearning/compile zio-aws-macie/compile zio-aws-macie2/compile
        zio-aws-managedblockchain/compile zio-aws-marketplacecatalog/compile zio-aws-marketplacecommerceanalytics/compile
        zio-aws-marketplaceentitlement/compile zio-aws-marketplacemetering/compile
        zio-aws-mediaconnect/compile zio-aws-mediaconvert/compile
    - name: Build and publish libraries
      if: ${{ github.ref == 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-kinesisanalytics/publishSigned
        zio-aws-kinesisanalyticsv2/publishSigned zio-aws-kinesisvideo/publishSigned
        zio-aws-kinesisvideoarchivedmedia/publishSigned zio-aws-kinesisvideomedia/publishSigned
        zio-aws-kinesisvideosignaling/publishSigned zio-aws-kms/publishSigned zio-aws-lakeformation/publishSigned
        zio-aws-lambda/publishSigned zio-aws-lexmodelbuilding/publishSigned zio-aws-lexmodelsv2/publishSigned
        zio-aws-lexruntime/publishSigned zio-aws-lexruntimev2/publishSigned zio-aws-licensemanager/publishSigned
        zio-aws-lightsail/publishSigned zio-aws-location/publishSigned zio-aws-lookoutequipment/publishSigned
        zio-aws-lookoutmetrics/publishSigned zio-aws-lookoutvision/publishSigned zio-aws-machinelearning/publishSigned
        zio-aws-macie/publishSigned zio-aws-macie2/publishSigned zio-aws-managedblockchain/publishSigned
        zio-aws-marketplacecatalog/publishSigned zio-aws-marketplacecommerceanalytics/publishSigned
        zio-aws-marketplaceentitlement/publishSigned zio-aws-marketplacemetering/publishSigned
        zio-aws-mediaconnect/publishSigned zio-aws-mediaconvert/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Build and publish library snapshots
      if: ${{ github.ref == 'refs/heads/zio2' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-kinesisanalytics/publish
        zio-aws-kinesisanalyticsv2/publish zio-aws-kinesisvideo/publish zio-aws-kinesisvideoarchivedmedia/publish
        zio-aws-kinesisvideomedia/publish zio-aws-kinesisvideosignaling/publish zio-aws-kms/publish
        zio-aws-lakeformation/publish zio-aws-lambda/publish zio-aws-lexmodelbuilding/publish
        zio-aws-lexmodelsv2/publish zio-aws-lexruntime/publish zio-aws-lexruntimev2/publish
        zio-aws-licensemanager/publish zio-aws-lightsail/publish zio-aws-location/publish
        zio-aws-lookoutequipment/publish zio-aws-lookoutmetrics/publish zio-aws-lookoutvision/publish
        zio-aws-machinelearning/publish zio-aws-macie/publish zio-aws-macie2/publish
        zio-aws-managedblockchain/publish zio-aws-marketplacecatalog/publish zio-aws-marketplacecommerceanalytics/publish
        zio-aws-marketplaceentitlement/publish zio-aws-marketplacemetering/publish
        zio-aws-mediaconnect/publish zio-aws-mediaconvert/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Compress clients-5 targets
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      run: tar cvf targets.tar target
    - name: Upload clients-5 targets
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      with:
        name: target-clients-5-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java
          }}
        path: targets.tar
  build-clients-6:
    name: 'Build client libraries #6'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - build-core
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Load PGP secret
      if: ${{ github.ref == 'refs/heads/master' }}
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Build libraries
      if: ${{ github.ref != 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-medialive/compile
        zio-aws-mediapackage/compile zio-aws-mediapackagevod/compile zio-aws-mediastore/compile
        zio-aws-mediastoredata/compile zio-aws-mediatailor/compile zio-aws-memorydb/compile
        zio-aws-mgn/compile zio-aws-migrationhub/compile zio-aws-migrationhubconfig/compile
        zio-aws-mobile/compile zio-aws-mq/compile zio-aws-mturk/compile zio-aws-mwaa/compile
        zio-aws-neptune/compile zio-aws-networkfirewall/compile zio-aws-networkmanager/compile
        zio-aws-nimble/compile zio-aws-opensearch/compile zio-aws-opsworks/compile
        zio-aws-opsworkscm/compile zio-aws-organizations/compile zio-aws-outposts/compile
        zio-aws-panorama/compile zio-aws-personalize/compile zio-aws-personalizeevents/compile
        zio-aws-personalizeruntime/compile zio-aws-pi/compile zio-aws-pinpoint/compile
    - name: Build and publish libraries
      if: ${{ github.ref == 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-medialive/publishSigned
        zio-aws-mediapackage/publishSigned zio-aws-mediapackagevod/publishSigned zio-aws-mediastore/publishSigned
        zio-aws-mediastoredata/publishSigned zio-aws-mediatailor/publishSigned zio-aws-memorydb/publishSigned
        zio-aws-mgn/publishSigned zio-aws-migrationhub/publishSigned zio-aws-migrationhubconfig/publishSigned
        zio-aws-mobile/publishSigned zio-aws-mq/publishSigned zio-aws-mturk/publishSigned
        zio-aws-mwaa/publishSigned zio-aws-neptune/publishSigned zio-aws-networkfirewall/publishSigned
        zio-aws-networkmanager/publishSigned zio-aws-nimble/publishSigned zio-aws-opensearch/publishSigned
        zio-aws-opsworks/publishSigned zio-aws-opsworkscm/publishSigned zio-aws-organizations/publishSigned
        zio-aws-outposts/publishSigned zio-aws-panorama/publishSigned zio-aws-personalize/publishSigned
        zio-aws-personalizeevents/publishSigned zio-aws-personalizeruntime/publishSigned
        zio-aws-pi/publishSigned zio-aws-pinpoint/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Build and publish library snapshots
      if: ${{ github.ref == 'refs/heads/zio2' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-medialive/publish
        zio-aws-mediapackage/publish zio-aws-mediapackagevod/publish zio-aws-mediastore/publish
        zio-aws-mediastoredata/publish zio-aws-mediatailor/publish zio-aws-memorydb/publish
        zio-aws-mgn/publish zio-aws-migrationhub/publish zio-aws-migrationhubconfig/publish
        zio-aws-mobile/publish zio-aws-mq/publish zio-aws-mturk/publish zio-aws-mwaa/publish
        zio-aws-neptune/publish zio-aws-networkfirewall/publish zio-aws-networkmanager/publish
        zio-aws-nimble/publish zio-aws-opensearch/publish zio-aws-opsworks/publish
        zio-aws-opsworkscm/publish zio-aws-organizations/publish zio-aws-outposts/publish
        zio-aws-panorama/publish zio-aws-personalize/publish zio-aws-personalizeevents/publish
        zio-aws-personalizeruntime/publish zio-aws-pi/publish zio-aws-pinpoint/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Compress clients-6 targets
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      run: tar cvf targets.tar target
    - name: Upload clients-6 targets
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      with:
        name: target-clients-6-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java
          }}
        path: targets.tar
  build-clients-7:
    name: 'Build client libraries #7'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - build-core
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Load PGP secret
      if: ${{ github.ref == 'refs/heads/master' }}
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Build libraries
      if: ${{ github.ref != 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-pinpointemail/compile
        zio-aws-pinpointsmsvoice/compile zio-aws-polly/compile zio-aws-pricing/compile
        zio-aws-proton/compile zio-aws-qldb/compile zio-aws-qldbsession/compile zio-aws-quicksight/compile
        zio-aws-ram/compile zio-aws-rds/compile zio-aws-rdsdata/compile zio-aws-redshift/compile
        zio-aws-redshiftdata/compile zio-aws-rekognition/compile zio-aws-resourcegroups/compile
        zio-aws-resourcegroupstaggingapi/compile zio-aws-robomaker/compile zio-aws-route53/compile
        zio-aws-route53domains/compile zio-aws-route53recoverycluster/compile zio-aws-route53recoverycontrolconfig/compile
        zio-aws-route53recoveryreadiness/compile zio-aws-route53resolver/compile zio-aws-s3/compile
        zio-aws-s3control/compile zio-aws-s3outposts/compile zio-aws-sagemaker/compile
        zio-aws-sagemakera2iruntime/compile zio-aws-sagemakeredge/compile
    - name: Build and publish libraries
      if: ${{ github.ref == 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-pinpointemail/publishSigned
        zio-aws-pinpointsmsvoice/publishSigned zio-aws-polly/publishSigned zio-aws-pricing/publishSigned
        zio-aws-proton/publishSigned zio-aws-qldb/publishSigned zio-aws-qldbsession/publishSigned
        zio-aws-quicksight/publishSigned zio-aws-ram/publishSigned zio-aws-rds/publishSigned
        zio-aws-rdsdata/publishSigned zio-aws-redshift/publishSigned zio-aws-redshiftdata/publishSigned
        zio-aws-rekognition/publishSigned zio-aws-resourcegroups/publishSigned zio-aws-resourcegroupstaggingapi/publishSigned
        zio-aws-robomaker/publishSigned zio-aws-route53/publishSigned zio-aws-route53domains/publishSigned
        zio-aws-route53recoverycluster/publishSigned zio-aws-route53recoverycontrolconfig/publishSigned
        zio-aws-route53recoveryreadiness/publishSigned zio-aws-route53resolver/publishSigned
        zio-aws-s3/publishSigned zio-aws-s3control/publishSigned zio-aws-s3outposts/publishSigned
        zio-aws-sagemaker/publishSigned zio-aws-sagemakera2iruntime/publishSigned
        zio-aws-sagemakeredge/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Build and publish library snapshots
      if: ${{ github.ref == 'refs/heads/zio2' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-pinpointemail/publish
        zio-aws-pinpointsmsvoice/publish zio-aws-polly/publish zio-aws-pricing/publish
        zio-aws-proton/publish zio-aws-qldb/publish zio-aws-qldbsession/publish zio-aws-quicksight/publish
        zio-aws-ram/publish zio-aws-rds/publish zio-aws-rdsdata/publish zio-aws-redshift/publish
        zio-aws-redshiftdata/publish zio-aws-rekognition/publish zio-aws-resourcegroups/publish
        zio-aws-resourcegroupstaggingapi/publish zio-aws-robomaker/publish zio-aws-route53/publish
        zio-aws-route53domains/publish zio-aws-route53recoverycluster/publish zio-aws-route53recoverycontrolconfig/publish
        zio-aws-route53recoveryreadiness/publish zio-aws-route53resolver/publish zio-aws-s3/publish
        zio-aws-s3control/publish zio-aws-s3outposts/publish zio-aws-sagemaker/publish
        zio-aws-sagemakera2iruntime/publish zio-aws-sagemakeredge/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Compress clients-7 targets
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      run: tar cvf targets.tar target
    - name: Upload clients-7 targets
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      with:
        name: target-clients-7-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java
          }}
        path: targets.tar
  build-clients-8:
    name: 'Build client libraries #8'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - build-core
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Load PGP secret
      if: ${{ github.ref == 'refs/heads/master' }}
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Build libraries
      if: ${{ github.ref != 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-sagemakerfeaturestoreruntime/compile
        zio-aws-sagemakerruntime/compile zio-aws-savingsplans/compile zio-aws-schemas/compile
        zio-aws-secretsmanager/compile zio-aws-securityhub/compile zio-aws-serverlessapplicationrepository/compile
        zio-aws-servicecatalog/compile zio-aws-servicecatalogappregistry/compile zio-aws-servicediscovery/compile
        zio-aws-servicequotas/compile zio-aws-ses/compile zio-aws-sesv2/compile zio-aws-sfn/compile
        zio-aws-shield/compile zio-aws-signer/compile zio-aws-sms/compile zio-aws-snowball/compile
        zio-aws-snowdevicemanagement/compile zio-aws-sns/compile zio-aws-sqs/compile
        zio-aws-ssm/compile zio-aws-ssmcontacts/compile zio-aws-ssmincidents/compile
        zio-aws-sso/compile zio-aws-ssoadmin/compile zio-aws-ssooidc/compile zio-aws-storagegateway/compile
        zio-aws-sts/compile
    - name: Build and publish libraries
      if: ${{ github.ref == 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-sagemakerfeaturestoreruntime/publishSigned
        zio-aws-sagemakerruntime/publishSigned zio-aws-savingsplans/publishSigned
        zio-aws-schemas/publishSigned zio-aws-secretsmanager/publishSigned zio-aws-securityhub/publishSigned
        zio-aws-serverlessapplicationrepository/publishSigned zio-aws-servicecatalog/publishSigned
        zio-aws-servicecatalogappregistry/publishSigned zio-aws-servicediscovery/publishSigned
        zio-aws-servicequotas/publishSigned zio-aws-ses/publishSigned zio-aws-sesv2/publishSigned
        zio-aws-sfn/publishSigned zio-aws-shield/publishSigned zio-aws-signer/publishSigned
        zio-aws-sms/publishSigned zio-aws-snowball/publishSigned zio-aws-snowdevicemanagement/publishSigned
        zio-aws-sns/publishSigned zio-aws-sqs/publishSigned zio-aws-ssm/publishSigned
        zio-aws-ssmcontacts/publishSigned zio-aws-ssmincidents/publishSigned zio-aws-sso/publishSigned
        zio-aws-ssoadmin/publishSigned zio-aws-ssooidc/publishSigned zio-aws-storagegateway/publishSigned
        zio-aws-sts/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Build and publish library snapshots
      if: ${{ github.ref == 'refs/heads/zio2' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-sagemakerfeaturestoreruntime/publish
        zio-aws-sagemakerruntime/publish zio-aws-savingsplans/publish zio-aws-schemas/publish
        zio-aws-secretsmanager/publish zio-aws-securityhub/publish zio-aws-serverlessapplicationrepository/publish
        zio-aws-servicecatalog/publish zio-aws-servicecatalogappregistry/publish zio-aws-servicediscovery/publish
        zio-aws-servicequotas/publish zio-aws-ses/publish zio-aws-sesv2/publish zio-aws-sfn/publish
        zio-aws-shield/publish zio-aws-signer/publish zio-aws-sms/publish zio-aws-snowball/publish
        zio-aws-snowdevicemanagement/publish zio-aws-sns/publish zio-aws-sqs/publish
        zio-aws-ssm/publish zio-aws-ssmcontacts/publish zio-aws-ssmincidents/publish
        zio-aws-sso/publish zio-aws-ssoadmin/publish zio-aws-ssooidc/publish zio-aws-storagegateway/publish
        zio-aws-sts/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Compress clients-8 targets
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      run: tar cvf targets.tar target
    - name: Upload clients-8 targets
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      with:
        name: target-clients-8-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java
          }}
        path: targets.tar
  build-clients-9:
    name: 'Build client libraries #9'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - build-core
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Load PGP secret
      if: ${{ github.ref == 'refs/heads/master' }}
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Build libraries
      if: ${{ github.ref != 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-support/compile
        zio-aws-swf/compile zio-aws-synthetics/compile zio-aws-textract/compile zio-aws-timestreamquery/compile
        zio-aws-timestreamwrite/compile zio-aws-transcribe/compile zio-aws-transcribestreaming/compile
        zio-aws-transfer/compile zio-aws-translate/compile zio-aws-voiceid/compile
        zio-aws-waf/compile zio-aws-wafregional/compile zio-aws-wafv2/compile zio-aws-wellarchitected/compile
        zio-aws-wisdom/compile zio-aws-workdocs/compile zio-aws-worklink/compile zio-aws-workmail/compile
        zio-aws-workmailmessageflow/compile zio-aws-workspaces/compile zio-aws-xray/compile
    - name: Build and publish libraries
      if: ${{ github.ref == 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-support/publishSigned
        zio-aws-swf/publishSigned zio-aws-synthetics/publishSigned zio-aws-textract/publishSigned
        zio-aws-timestreamquery/publishSigned zio-aws-timestreamwrite/publishSigned
        zio-aws-transcribe/publishSigned zio-aws-transcribestreaming/publishSigned
        zio-aws-transfer/publishSigned zio-aws-translate/publishSigned zio-aws-voiceid/publishSigned
        zio-aws-waf/publishSigned zio-aws-wafregional/publishSigned zio-aws-wafv2/publishSigned
        zio-aws-wellarchitected/publishSigned zio-aws-wisdom/publishSigned zio-aws-workdocs/publishSigned
        zio-aws-worklink/publishSigned zio-aws-workmail/publishSigned zio-aws-workmailmessageflow/publishSigned
        zio-aws-workspaces/publishSigned zio-aws-xray/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Build and publish library snapshots
      if: ${{ github.ref == 'refs/heads/zio2' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-support/publish
        zio-aws-swf/publish zio-aws-synthetics/publish zio-aws-textract/publish zio-aws-timestreamquery/publish
        zio-aws-timestreamwrite/publish zio-aws-transcribe/publish zio-aws-transcribestreaming/publish
        zio-aws-transfer/publish zio-aws-translate/publish zio-aws-voiceid/publish
        zio-aws-waf/publish zio-aws-wafregional/publish zio-aws-wafv2/publish zio-aws-wellarchitected/publish
        zio-aws-wisdom/publish zio-aws-workdocs/publish zio-aws-worklink/publish zio-aws-workmail/publish
        zio-aws-workmailmessageflow/publish zio-aws-workspaces/publish zio-aws-xray/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Compress clients-9 targets
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      run: tar cvf targets.tar target
    - name: Upload clients-9 targets
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      with:
        name: target-clients-9-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java
          }}
        path: targets.tar
  build-clients-10:
    name: 'Build client libraries #10'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - build-core
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Load PGP secret
      if: ${{ github.ref == 'refs/heads/master' }}
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Build libraries
      if: ${{ github.ref != 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-ec2/compile
    - name: Build and publish libraries
      if: ${{ github.ref == 'refs/heads/master' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-ec2/publishSigned
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Build and publish library snapshots
      if: ${{ github.ref == 'refs/heads/zio2' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx6g -J-Xms6g -J-Xss16m ++${{ matrix.scala }} zio-aws-ec2/publish
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    - name: Compress clients-10 targets
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      run: tar cvf targets.tar target
    - name: Upload clients-10 targets
      uses: actions/upload-artifact@v2
      if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
        }}
      with:
        name: target-clients-10-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java
          }}
        path: targets.tar
  integration-test:
    name: Integration test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        scala:
        - 2.12.15
        - 2.13.6
        - 3.1.0
        java:
        - adopt@1.8
    needs:
    - build-core
    services:
      localstack:
        image: localstack/localstack:latest
        env:
          DEFAULT_REGION: us-east-1
          DEBUG: '0'
          SERVICES: s3,dynamodb
          AWS_ACCESS_KEY_ID: dummy-key
          AWS_SECRET_ACCESS_KEY: dummy-key
          LOCALSTACK_HOST: localstack
          AWS_DEFAULT_REGION: us-east-1
          USE_SSL: 'false'
        ports:
        - 4566:4566
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ${{ matrix.os }}-sbt-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-${{
          hashFiles('**/build.properties') }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Build and run tests
      if: ${{ matrix.scala != '3.1.0' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx5g -J-Xms5g -J-Xss16m ++${{ matrix.scala }} examples/compile
        integtests/test
    - name: Build and run tests
      if: ${{ matrix.scala == '3.1.0' }}
      run: sbt -J-XX:+UseG1GC -J-Xmx5g -J-Xms5g -J-Xss16m ++${{ matrix.scala }} examples/compile
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
    - build-core
    - integration-test
    - build-clients-0
    - build-clients-1
    - build-clients-2
    - build-clients-3
    - build-clients-4
    - build-clients-5
    - build-clients-6
    - build-clients-7
    - build-clients-8
    - build-clients-9
    - build-clients-10
    if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/zio2')
      }}
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: adopt@1.8
    - name: Setup GPG
      uses: olafurpg/setup-gpg@v3
    - name: Load PGP secret
      run: .github/import-key.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ubuntu-latest-sbt-2.13.6-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties')
          }}
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-ubuntu-latest-2.13.6-adopt@1.8
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-0 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-0-ubuntu-latest-2.13.6-adopt@1.8
    - name: Inflate clients-0 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-1 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-1-ubuntu-latest-2.13.6-adopt@1.8
    - name: Inflate clients-1 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-2 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-2-ubuntu-latest-2.13.6-adopt@1.8
    - name: Inflate clients-2 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-3 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-3-ubuntu-latest-2.13.6-adopt@1.8
    - name: Inflate clients-3 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-4 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-4-ubuntu-latest-2.13.6-adopt@1.8
    - name: Inflate clients-4 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-5 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-5-ubuntu-latest-2.13.6-adopt@1.8
    - name: Inflate clients-5 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-6 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-6-ubuntu-latest-2.13.6-adopt@1.8
    - name: Inflate clients-6 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-7 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-7-ubuntu-latest-2.13.6-adopt@1.8
    - name: Inflate clients-7 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-8 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-8-ubuntu-latest-2.13.6-adopt@1.8
    - name: Inflate clients-8 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-9 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-9-ubuntu-latest-2.13.6-adopt@1.8
    - name: Inflate clients-9 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-10 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-10-ubuntu-latest-2.13.6-adopt@1.8
    - name: Inflate clients-10 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-ubuntu-latest-2.12.15-adopt@1.8
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-0 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-0-ubuntu-latest-2.12.15-adopt@1.8
    - name: Inflate clients-0 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-1 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-1-ubuntu-latest-2.12.15-adopt@1.8
    - name: Inflate clients-1 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-2 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-2-ubuntu-latest-2.12.15-adopt@1.8
    - name: Inflate clients-2 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-3 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-3-ubuntu-latest-2.12.15-adopt@1.8
    - name: Inflate clients-3 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-4 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-4-ubuntu-latest-2.12.15-adopt@1.8
    - name: Inflate clients-4 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-5 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-5-ubuntu-latest-2.12.15-adopt@1.8
    - name: Inflate clients-5 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-6 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-6-ubuntu-latest-2.12.15-adopt@1.8
    - name: Inflate clients-6 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-7 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-7-ubuntu-latest-2.12.15-adopt@1.8
    - name: Inflate clients-7 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-8 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-8-ubuntu-latest-2.12.15-adopt@1.8
    - name: Inflate clients-8 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-9 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-9-ubuntu-latest-2.12.15-adopt@1.8
    - name: Inflate clients-9 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-10 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-10-ubuntu-latest-2.12.15-adopt@1.8
    - name: Inflate clients-10 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored core targets
      uses: actions/download-artifact@v2
      with:
        name: target-core-ubuntu-latest-3.1.0-adopt@1.8
    - name: Inflate core targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-0 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-0-ubuntu-latest-3.1.0-adopt@1.8
    - name: Inflate clients-0 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-1 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-1-ubuntu-latest-3.1.0-adopt@1.8
    - name: Inflate clients-1 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-2 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-2-ubuntu-latest-3.1.0-adopt@1.8
    - name: Inflate clients-2 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-3 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-3-ubuntu-latest-3.1.0-adopt@1.8
    - name: Inflate clients-3 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-4 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-4-ubuntu-latest-3.1.0-adopt@1.8
    - name: Inflate clients-4 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-5 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-5-ubuntu-latest-3.1.0-adopt@1.8
    - name: Inflate clients-5 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-6 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-6-ubuntu-latest-3.1.0-adopt@1.8
    - name: Inflate clients-6 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-7 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-7-ubuntu-latest-3.1.0-adopt@1.8
    - name: Inflate clients-7 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-8 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-8-ubuntu-latest-3.1.0-adopt@1.8
    - name: Inflate clients-8 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-9 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-9-ubuntu-latest-3.1.0-adopt@1.8
    - name: Inflate clients-9 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Download stored clients-10 targets
      uses: actions/download-artifact@v2
      with:
        name: target-clients-10-ubuntu-latest-3.1.0-adopt@1.8
    - name: Inflate clients-10 targets
      run: tar xvf targets.tar

        rm targets.tar
    - name: Publish artifacts
      run: sbt -J-XX:+UseG1GC -J-Xmx5g -J-Xms5g -J-Xss16m sonatypeBundleRelease
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  microsite:
    name: Build and publish microsite
    runs-on: ubuntu-latest
    needs:
    - release
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: adopt@1.8
    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: ~/.ivy2/cache

          ~/.sbt

          ~/.coursier/cache/v1

          ~/.cache/coursier/v1
        key: ubuntu-latest-sbt-2.13.6-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties')
          }}
    - name: Setup GIT user
      uses: fregante/setup-git-user@v1
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6.6
        bundler-cache: true
    - name: Install Jekyll
      run: gem install sass

        gem install jekyll -v 4.0.0

        gem install jemoji -v 0.11.1

        gem install jekyll-sitemap -v 1.4.0
    - name: Build and publish microsite
      run: sbt -J-XX:+UseG1GC -J-Xmx4g -J-Xms4g -J-Xss16m ++2.13.3 generateArtifactList
        docs/publishMicrosite
      env:
        GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
